"""add facilities field to room model

Revision ID: f43e3e328508
Revises: 6ccda2631b90
Create Date: 2025-03-07 00:08:42.052026

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f43e3e328508'
down_revision = '6ccda2631b90'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('students')
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('facilities', sa.String(length=500), nullable=True))
        batch_op.drop_column('description')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('employee_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('department',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=11),
               nullable=True)
        batch_op.drop_constraint('uq_users_employee_id', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_users_employee_id', ['employee_id'])
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=11),
               nullable=False)
        batch_op.alter_column('department',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('employee_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)

    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.TEXT(), nullable=True))
        batch_op.drop_column('facilities')

    op.create_table('students',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('student_id', sa.VARCHAR(length=20), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('gender', sa.VARCHAR(length=10), nullable=False),
    sa.Column('department', sa.VARCHAR(length=100), nullable=True),
    sa.Column('major', sa.VARCHAR(length=100), nullable=True),
    sa.Column('grade', sa.VARCHAR(length=20), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), nullable=True),
    sa.Column('room_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id')
    )
    # ### end Alembic commands ###
